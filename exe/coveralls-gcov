#!/usr/bin/env ruby

require 'commander/import'

require 'coveralls/gcov'

HighLine.track_eof = false # Fix for built-in Ruby
Signal.trap("INT") {} # Suppress backtrace when exiting command

program :version, Coveralls::Gcov::VERSION
program :description, 'Upload coverage information generated by Gcov to coveralls.io.'

program :help, 'Author', 'kishikawa Katsumi <kishikawakatsumi@mac.com>'
program :help, 'Website', 'http://kishikawakatsumi.com'
program :help_formatter, :compact

default_command :send

command :send do |c|
  c.syntax = 'coveralls-gcov [send] [--repo-token TOKEN] [--root DIR] [--exclude DIR|FILE] [--exclude-pattern REGEXP] [--extension EXT] [--no-gcov]'
  c.summary = 'Sends coverage information generated by Gcov to coveralls.io.'
  c.description = ''

  c.option '-r DIR', '--root DIR', 'set the root directory'
  c.option '-e DIR|FILE', '--exclude DIR|FILE', Array, 'set exclude file or directory'
  c.option '-E REGEXP', '--exclude-pattern REGEXP', 'set exclude file/directory pattern'
  c.option '-x EXT', '--extension EXT', Array, 'set extension of files to process'
  c.option '-n', '--no-gcov', 'do not run gcov'
  c.option '-t TOKEN', '--repo-token TOKEN', 'set the repo_token of this project'

  c.action do |args, options|
    runner = Coveralls::Gcov::Runner.new
    runner.root_dir = options.root if options.root
    runner.excludes = options.exclude if options.exclude
    runner.exclude_pattern = options.exclude_pattern if options.exclude_pattern
    runner.extensions = options.extension if options.extension
    runner.no_gcov = !!options.no_gcov
    runner.repo_token = options.repo_token if options.repo_token

    begin
      runner.run

    rescue => message
      say_error "#{message}" and abort
    end
  end
end
